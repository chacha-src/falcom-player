// ヒント ファイルは、Visual Studio IDE が Visual C++ 識別子を解釈するのに役立ちます
// 関数およびマクロの名前などです。
// 詳細については次を参照してください https://go.microsoft.com/fwlink/?linkid=865984
#define cmn(xxx) ON_WM_CREATE() ON_WM_MOVING() ON_WM_CTLCOLOR() ON_WM_TIMER() END_MESSAGE_MAP() include "CImageBase.h" extern save savedata; extern CImageBase* Games; int Cxxx::OnCreate(LPCREATESTRUCT lpCreateStruct) { if (CDialog::OnCreate(lpCreateStruct) == -1) return -1; if (savedata.aero == 1) { ModifyStyleEx(0, WS_EX_LAYERED); SetLayeredWindowAttributes(RGB(255, 0, 0), 0, LWA_COLORKEY); m_brDlg.CreateSolidBrush(RGB(255, 0, 0)); } SetTimer(500, 200, NULL); return 0; } void Cxxx::OnMoving(UINT fwSide, LPRECT pRect) { CDialog::OnMoving(fwSide, pRect); CRect r; GetWindowRect(&r); if (Games) Games->MoveWindow(&r); } HBRUSH Cxxx::OnCtlColor(CDC* pDC, CWnd* pWnd, UINT nCtlColor) { HBRUSH hbr = CDialog::OnCtlColor(pDC, pWnd, nCtlColor); if (savedata.aero == 1) { if (nCtlColor == CTLCOLOR_DLG) { return m_brDlg; } if (nCtlColor == CTLCOLOR_STATIC) { SetBkMode(pDC->m_hDC, TRANSPARENT); return m_brDlg; } } return hbr; } void CAxxx::OnTimer(UINT_PTR nIDEvent) { KillTimer(500); Games = new CImageBase; Games->oya = this; Games->Create(this); CRect r; GetWindowRect(&r); if (Games) Games->MoveWindow(&r); ::SetWindowPos(Games->m_hWnd, HWND_TOPMOST, 0, 0, 0, 0, SWP_NOMOVE | SWP_NOSIZE); ::SetWindowPos(m_hWnd, HWND_TOPMOST, 0, 0, 0, 0, SWP_NOMOVE | SWP_NOSIZE); CDialog::OnTimer(nIDEvent); } BOOL Cxxx::DestroyWindow() { if (Games) delete Games; return CDialog::DestroyWindow(); }
